From 4892190fc929183ded3e724d30d938f2f5f3387e Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>
Date: Sun, 12 Aug 2018 16:36:16 +0200
Subject: [PATCH 52/64] net: lora: sx1301: Move firmware operations to loradev
 open
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Decouple radio initialization from calibration to deal with deferred
radio probing.

Signed-off-by: Andreas FÃ¤rber <afaerber@suse.de>
---
 drivers/net/lora/sx1301.c | 131 ++++++++++++++++++++++++++------------
 1 file changed, 92 insertions(+), 39 deletions(-)

diff --git a/drivers/net/lora/sx1301.c b/drivers/net/lora/sx1301.c
index 422ecc7a3e89..a5fd2d217f0e 100644
--- a/drivers/net/lora/sx1301.c
+++ b/drivers/net/lora/sx1301.c
@@ -551,6 +551,93 @@ static int sx1301_load_all_firmware(struct sx1301_priv *priv)
 	return 0;
 }
 
+static netdev_tx_t sx130x_loradev_start_xmit(struct sk_buff *skb, struct net_device *netdev)
+{
+	if (skb->protocol != htons(ETH_P_LORA)) {
+		kfree_skb(skb);
+		netdev->stats.tx_dropped++;
+		return NETDEV_TX_OK;
+	}
+
+	netif_stop_queue(netdev);
+
+	/* TODO */
+	return NETDEV_TX_OK;
+}
+
+static int sx130x_loradev_open(struct net_device *netdev)
+{
+	struct sx1301_priv *priv = netdev_priv(netdev);
+	unsigned int val;
+	int ret;
+
+	netdev_dbg(netdev, "%s", __func__);
+
+	ret = regmap_read(priv->regmap, SX1301_GEN, &val);
+	if (ret) {
+		netdev_err(netdev, "16 read (1) failed\n");
+		return ret;
+	}
+
+	val |= REG_16_GLOBAL_EN;
+
+	ret = regmap_write(priv->regmap, SX1301_GEN, val);
+	if (ret) {
+		netdev_err(netdev, "16 write (1) failed\n");
+		return ret;
+	}
+
+	ret = regmap_read(priv->regmap, SX1301_CKEN, &val);
+	if (ret) {
+		netdev_err(netdev, "17 read (1) failed\n");
+		return ret;
+	}
+
+	val |= REG_17_CLK32M_EN;
+
+	ret = regmap_write(priv->regmap, SX1301_CKEN, val);
+	if (ret) {
+		netdev_err(netdev, "17 write (1) failed\n");
+		return ret;
+	}
+
+	/* calibration */
+
+	ret = sx1301_agc_calibrate(priv);
+	if (ret)
+		return ret;
+
+	/* TODO */
+
+	ret = sx1301_load_all_firmware(priv);
+	if (ret)
+		return ret;
+
+	ret = open_loradev(netdev);
+	if (ret)
+		return ret;
+
+	netif_start_queue(netdev);
+
+	return 0;
+}
+
+static int sx130x_loradev_stop(struct net_device *netdev)
+{
+	netdev_dbg(netdev, "%s", __func__);
+
+	netif_stop_queue(netdev);
+	close_loradev(netdev);
+
+	return 0;
+}
+
+static const struct net_device_ops sx130x_net_device_ops = {
+	.ndo_open = sx130x_loradev_open,
+	.ndo_stop = sx130x_loradev_stop,
+	.ndo_start_xmit = sx130x_loradev_start_xmit,
+};
+
 static void sx1301_radio_setup(struct spi_controller *ctrl)
 {
 	ctrl->mode_bits = SPI_CS_HIGH | SPI_NO_CS;
@@ -586,6 +673,8 @@ static int sx1301_probe(struct spi_device *spi)
 	if (!netdev)
 		return -ENOMEM;
 
+	netdev->netdev_ops = &sx130x_net_device_ops;
+
 	priv = netdev_priv(netdev);
 	priv->rst_gpio = rst;
 
@@ -773,43 +862,7 @@ static int sx1301_probe(struct spi_device *spi)
 
 	/* TODO LBT */
 
-	ret = regmap_read(priv->regmap, SX1301_GEN, &val);
-	if (ret) {
-		dev_err(&spi->dev, "16 read (1) failed\n");
-		return ret;
-	}
-
-	val |= REG_16_GLOBAL_EN;
-
-	ret = regmap_write(priv->regmap, SX1301_GEN, val);
-	if (ret) {
-		dev_err(&spi->dev, "16 write (1) failed\n");
-		return ret;
-	}
-
-	ret = regmap_read(priv->regmap, SX1301_CKEN, &val);
-	if (ret) {
-		dev_err(&spi->dev, "17 read (1) failed\n");
-		return ret;
-	}
-
-	val |= REG_17_CLK32M_EN;
-
-	ret = regmap_write(priv->regmap, SX1301_CKEN, val);
-	if (ret) {
-		dev_err(&spi->dev, "17 write (1) failed\n");
-		return ret;
-	}
-
-	/* calibration */
-
-	ret = sx1301_agc_calibrate(priv);
-	if (ret)
-		return ret;
-
-	/* TODO */
-
-	ret = sx1301_load_all_firmware(priv);
+	ret = register_loradev(netdev);
 	if (ret)
 		return ret;
 
@@ -820,9 +873,9 @@ static int sx1301_probe(struct spi_device *spi)
 
 static int sx1301_remove(struct spi_device *spi)
 {
-	//struct net_device *netdev = spi_get_drvdata(spi);
+	struct net_device *netdev = spi_get_drvdata(spi);
 
-	//unregister_loradev(netdev);
+	unregister_loradev(netdev);
 
 	dev_info(&spi->dev, "SX1301 module removed\n");
 
-- 
2.19.1

