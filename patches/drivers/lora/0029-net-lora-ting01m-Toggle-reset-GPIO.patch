From 369637fd0c6ad829108c65f793f0cea5b02c1409 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20F=C3=A4rber?= <afaerber@suse.de>
Date: Sat, 14 Jul 2018 00:30:46 +0200
Subject: [PATCH 29/64] net: lora: ting01m: Toggle reset GPIO
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Andreas FÃ¤rber <afaerber@suse.de>
---
 drivers/net/lora/ting01m.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/drivers/net/lora/ting01m.c b/drivers/net/lora/ting01m.c
index c00a3f9ae93d..cf796bcdd35e 100644
--- a/drivers/net/lora/ting01m.c
+++ b/drivers/net/lora/ting01m.c
@@ -6,6 +6,7 @@
  */
 
 #include <linux/delay.h>
+#include <linux/gpio/consumer.h>
 #include <linux/lora.h>
 #include <linux/module.h>
 #include <linux/netdevice.h>
@@ -16,6 +17,8 @@
 struct widora_device {
 	struct serdev_device *serdev;
 
+	struct gpio_desc *rst;
+
 	char rx_buf[4096];
 	int rx_len;
 
@@ -65,6 +68,14 @@ static int widora_simple_cmd(struct widora_device *widev, const char *cmd, unsig
 	return -EINVAL;
 }
 
+static void widora_reset_mcu(struct widora_device *widev)
+{
+	gpiod_set_value_cansleep(widev->rst, 0);
+	msleep(200);
+	gpiod_set_value_cansleep(widev->rst, 1);
+	msleep(500);
+}
+
 static int widora_do_reset(struct widora_device *widev, unsigned long timeout)
 {
 	char *resp;
@@ -162,6 +173,12 @@ static int widora_probe(struct serdev_device *sdev)
 	if (!widev)
 		return -ENOMEM;
 
+	widev->rst = devm_gpiod_get_optional(&sdev->dev, "reset", GPIOD_OUT_LOW);
+	if (IS_ERR(widev->rst))
+		return PTR_ERR(widev->rst);
+
+	widora_reset_mcu(widev);
+
 	widev->serdev = sdev;
 	init_completion(&widev->line_recv_comp);
 	serdev_device_set_drvdata(sdev, widev);
-- 
2.19.1

